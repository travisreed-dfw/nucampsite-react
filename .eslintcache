[{"/Volumes/Data/travis_Bkup/Documents/NucampFolder/3-React/nucampsite/src/index.js":"1","/Volumes/Data/travis_Bkup/Documents/NucampFolder/3-React/nucampsite/src/App.js":"2","/Volumes/Data/travis_Bkup/Documents/NucampFolder/3-React/nucampsite/src/reportWebVitals.js":"3","/Volumes/Data/travis_Bkup/Documents/NucampFolder/3-React/nucampsite/src/components/DirectoryComponent.js":"4","/Volumes/Data/travis_Bkup/Documents/NucampFolder/3-React/nucampsite/src/shared/campsites.js":"5","/Volumes/Data/travis_Bkup/Documents/NucampFolder/3-React/nucampsite/src/components/CampsiteInfoComponent.js":"6","/Volumes/Data/travis_Bkup/Documents/NucampFolder/3-React/nucampsite/src/components/MainComponent.js":"7","/Volumes/Data/travis_Bkup/Documents/NucampFolder/3-React/nucampsite/src/components/FooterComponent.js":"8","/Volumes/Data/travis_Bkup/Documents/NucampFolder/3-React/nucampsite/src/components/HeaderComponent.js":"9","/Volumes/Data/travis_Bkup/Documents/NucampFolder/3-React/nucampsite/src/components/HomeComponent.js":"10","/Volumes/Data/travis_Bkup/Documents/NucampFolder/3-React/nucampsite/src/components/ContactComponent.js":"11","/Volumes/Data/travis_Bkup/Documents/NucampFolder/3-React/nucampsite/src/shared/promotions.js":"12","/Volumes/Data/travis_Bkup/Documents/NucampFolder/3-React/nucampsite/src/shared/partners.js":"13","/Volumes/Data/travis_Bkup/Documents/NucampFolder/3-React/nucampsite/src/shared/comments.js":"14","/Volumes/Data/travis_Bkup/Documents/NucampFolder/3-React/nucampsite/src/components/AboutComponent.js":"15","/Volumes/Data/travis_Bkup/Documents/NucampFolder/3-React/nucampsite/src/redux/configureStore.js":"16","/Volumes/Data/travis_Bkup/Documents/NucampFolder/3-React/nucampsite/src/redux/comments.js":"17","/Volumes/Data/travis_Bkup/Documents/NucampFolder/3-React/nucampsite/src/redux/promotions.js":"18","/Volumes/Data/travis_Bkup/Documents/NucampFolder/3-React/nucampsite/src/redux/partners.js":"19","/Volumes/Data/travis_Bkup/Documents/NucampFolder/3-React/nucampsite/src/redux/campsites.js":"20","/Volumes/Data/travis_Bkup/Documents/NucampFolder/3-React/nucampsite/src/redux/ActionTypes.js":"21","/Volumes/Data/travis_Bkup/Documents/NucampFolder/3-React/nucampsite/src/redux/ActionCreators.js":"22","/Volumes/Data/travis_Bkup/Documents/NucampFolder/3-React/nucampsite/src/components/LoadingComponent.js":"23"},{"size":752,"mtime":1609556141000,"results":"24","hashOfConfig":"25"},{"size":620,"mtime":1610201495000,"results":"26","hashOfConfig":"25"},{"size":362,"mtime":1608666086000,"results":"27","hashOfConfig":"25"},{"size":2359,"mtime":1610667226000,"results":"28","hashOfConfig":"25"},{"size":1242,"mtime":1609563742000,"results":"29","hashOfConfig":"25"},{"size":8562,"mtime":1610666555000,"results":"30","hashOfConfig":"25"},{"size":3712,"mtime":1610666302000,"results":"31","hashOfConfig":"25"},{"size":2924,"mtime":1609556655000,"results":"32","hashOfConfig":"25"},{"size":6533,"mtime":1610168715000,"results":"33","hashOfConfig":"25"},{"size":1287,"mtime":1610666626000,"results":"34","hashOfConfig":"25"},{"size":12790,"mtime":1610203000000,"results":"35","hashOfConfig":"25"},{"size":303,"mtime":1609563760000,"results":"36","hashOfConfig":"25"},{"size":1054,"mtime":1609563754000,"results":"37","hashOfConfig":"25"},{"size":4243,"mtime":1609563749000,"results":"38","hashOfConfig":"25"},{"size":4876,"mtime":1609609670000,"results":"39","hashOfConfig":"25"},{"size":611,"mtime":1610666980000,"results":"40","hashOfConfig":"25"},{"size":445,"mtime":1610595766000,"results":"41","hashOfConfig":"25"},{"size":191,"mtime":1610592207000,"results":"42","hashOfConfig":"25"},{"size":183,"mtime":1610592174000,"results":"43","hashOfConfig":"25"},{"size":925,"mtime":1610666184000,"results":"44","hashOfConfig":"25"},{"size":194,"mtime":1610666075000,"results":"45","hashOfConfig":"25"},{"size":774,"mtime":1610666107000,"results":"46","hashOfConfig":"25"},{"size":235,"mtime":1610666216000,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1dab56m",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"/Volumes/Data/travis_Bkup/Documents/NucampFolder/3-React/nucampsite/src/index.js",[],["97","98"],"/Volumes/Data/travis_Bkup/Documents/NucampFolder/3-React/nucampsite/src/App.js",[],"/Volumes/Data/travis_Bkup/Documents/NucampFolder/3-React/nucampsite/src/reportWebVitals.js",[],"/Volumes/Data/travis_Bkup/Documents/NucampFolder/3-React/nucampsite/src/components/DirectoryComponent.js",[],"/Volumes/Data/travis_Bkup/Documents/NucampFolder/3-React/nucampsite/src/shared/campsites.js",[],"/Volumes/Data/travis_Bkup/Documents/NucampFolder/3-React/nucampsite/src/components/CampsiteInfoComponent.js",["99","100","101"],"import React, { Component } from \"react\";\nimport {\n    Card,\n    CardImg,\n    CardText,\n    CardBody,\n    Breadcrumb,\n    BreadcrumbItem,\n    Label,\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { Control, LocalForm, Errors } from \"react-redux-form\";\nimport { Loading } from \"./LoadingComponent\";\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !val || val.length <= len;\nconst minLength = (len) => (val) => val && val.length >= len;\n\nclass CommentForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isModalOpen: false,\n        };\n\n        this.toggleModal = this.toggleModal.bind(this);\n    }\n\n    toggleModal() {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen,\n        });\n    }\n    handleSubmit(values) {\n        this.toggleModal();\n        this.props.addComment(\n            this.props.campsiteId,\n            values.rating,\n            values.author,\n            values.text\n        );\n    }\n    render() {\n        return (\n            <React.Fragment>\n                <Button\n                    className='fa fa-lg fa-pencil'\n                    outline\n                    onClick={this.toggleModal}>\n                    Submit Comment\n                </Button>\n                <Modal\n                    isOpen={this.state.isModalOpen}\n                    toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>\n                        Submit Comment\n                    </ModalHeader>\n                    <ModalBody>\n                        <LocalForm\n                            onSubmit={(values) => this.handleSubmit(values)}>\n                            <div className='form-group'>\n                                <Label htmlFor='rating'>Rating</Label>\n                                <Control.select\n                                    model='.rating'\n                                    id='rating'\n                                    name='rating'\n                                    placeholder='rating'\n                                    className='form-control'\n                                    validators={{\n                                        required,\n                                    }}>\n                                    <option value='1'>1</option>\n                                    <option value='2'>2</option>\n                                    <option value='3'>3</option>\n                                    <option value='4'>4</option>\n                                    <option value='5'>5</option>\n                                </Control.select>\n                                <Errors\n                                    className='text-danger'\n                                    model='.rating'\n                                    show='touched'\n                                    component='div'\n                                    messages={{\n                                        required: \"Required\",\n                                    }}\n                                />\n                            </div>\n                            <Label htmlFor='author'>Your Name</Label>\n\n                            <Control.text\n                                model='.author'\n                                id='author'\n                                name='author'\n                                placeholder='author'\n                                className='form-control'\n                                validators={{\n                                    required,\n                                    minLength: minLength(2),\n                                    maxLength: maxLength(15),\n                                }}\n                            />\n                            <Errors\n                                className='text-danger'\n                                model='.author'\n                                show='touched'\n                                component='div'\n                                messages={{\n                                    required: \"Required\",\n                                    minLength: \"Must be at least 2 characters\",\n                                    maxLength: \"Must be 15 characters or less\",\n                                }}\n                            />\n\n                            <Label htmlFor='text'>Comment</Label>\n\n                            <Control.textarea\n                                model='.text'\n                                id='text'\n                                name='text'\n                                placeholder='comment'\n                                className='form-control'\n                                rows='6'\n                                validators={{\n                                    required,\n                                }}\n                            />\n                            <Errors\n                                className='text-danger'\n                                model='.text'\n                                show='touched'\n                                component='div'\n                                messages={{\n                                    required: \"Required\",\n                                }}\n                            />\n                            <Button type='submit' color='primary' md={3}>\n                                Submit\n                            </Button>\n                        </LocalForm>\n                    </ModalBody>\n                </Modal>\n            </React.Fragment>\n        );\n    }\n}\n\nfunction RenderCampsite({ campsite }) {\n    if (campsite) {\n        return (\n            <div className='col-md-5 m-1'>\n                <Card>\n                    <CardImg top src={campsite.image} alt={campsite.name} />\n                    <CardBody>\n                        <CardText>{campsite.description}</CardText>\n                    </CardBody>\n                </Card>\n            </div>\n        );\n    }\n    return <div />;\n}\n\nfunction RenderComments({ comments, addComment, campsiteId }) {\n    if (comments) {\n        return (\n            <div className='col-md-5 m-1'>\n                <h4>Comments</h4>\n                {comments.map((comment) => (\n                    <div key={comment.id}>\n                        {comment.text} <br />\n                        -- {comment.author},{\" \"}\n                        {new Intl.DateTimeFormat(\"en-US\", {\n                            year: \"numeric\",\n                            month: \"short\",\n                            day: \"2-digit\",\n                        }).format(new Date(Date.parse(comment.date)))}\n                    </div>\n                ))}\n                <CommentForm campsiteId={campsiteId} addComment={addComment} />\n            </div>\n        );\n    }\n    return <div />;\n}\n\nfunction CampsiteInfo(props) {\n    if (props.isLoading) {\n        return (\n            <div className='container'>\n                <div className='row'>\n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n    if (props.errMess) {\n        return (\n            <div className='container'>\n                <div className='row'>\n                    <div className='col'>\n                        <h4>{props.errMess}</h4>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    if (props.campsite) {\n        return (\n            <div className='container'>\n                <div className='row'>\n                    <div className='col'>\n                        <Breadcrumb>\n                            <BreadcrumbItem>\n                                <Link to='/directory'>Directory</Link>\n                            </BreadcrumbItem>\n                            <BreadcrumbItem active>\n                                {props.campsite.name}\n                            </BreadcrumbItem>\n                        </Breadcrumb>\n                        <h2>{props.campsite.name}</h2>\n                        <hr />\n                    </div>\n                </div>\n                <div className='row'>\n                    <RenderCampsite campsite={props.campsite} />\n                    <RenderComments\n                        comments={props.comments}\n                        addComment={props.addComment}\n                        campsiteId={props.campsite.id}\n                    />\n                </div>\n            </div>\n        );\n    }\n    return <div />;\n}\n\nexport default CampsiteInfo;\n","/Volumes/Data/travis_Bkup/Documents/NucampFolder/3-React/nucampsite/src/components/MainComponent.js",[],"/Volumes/Data/travis_Bkup/Documents/NucampFolder/3-React/nucampsite/src/components/FooterComponent.js",[],"/Volumes/Data/travis_Bkup/Documents/NucampFolder/3-React/nucampsite/src/components/HeaderComponent.js",[],"/Volumes/Data/travis_Bkup/Documents/NucampFolder/3-React/nucampsite/src/components/HomeComponent.js",[],"/Volumes/Data/travis_Bkup/Documents/NucampFolder/3-React/nucampsite/src/components/ContactComponent.js",["102","103","104","105","106","107","108"],"import React, { Component } from \"react\";\nimport {\n    Breadcrumb,\n    BreadcrumbItem,\n    Button,\n    Label,\n    Col,\n    Row,\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { Control, LocalForm, Errors } from \"react-redux-form\";\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !val || val.length <= len;\nconst minLength = (len) => (val) => val && val.length >= len;\nconst isNumber = (val) => !isNaN(+val);\nconst validEmail = (val) =>\n    /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\nclass Contact extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            firstName: \"\",\n            lastName: \"\",\n            phoneNum: \"\",\n            email: \"\",\n            agree: false,\n            contactType: \"By Phone\",\n            feedback: \"\",\n            touched: {\n                firstName: false,\n                lastName: false,\n                phoneNum: false,\n                email: false,\n            },\n        };\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(values) {\n        console.log(\"Current state is: \" + JSON.stringify(values));\n        alert(\"Current state is: \" + JSON.stringify(values));\n    }\n\n    render() {\n        return (\n            <div className='container'>\n                <div className='row'>\n                    <div className='col'>\n                        <Breadcrumb>\n                            <BreadcrumbItem>\n                                <Link to='/home'>Home</Link>\n                            </BreadcrumbItem>\n                            <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n                        </Breadcrumb>\n                        <h2>Contact Us</h2>\n                        <hr />\n                    </div>\n                </div>\n\n                <div className='row row-content align-items-center'>\n                    <div className='col-sm-4'>\n                        <h5>Our Address</h5>\n                        <address>\n                            1 Nucamp Way\n                            <br />\n                            Seattle, WA 98001\n                            <br />\n                            U.S.A.\n                        </address>\n                    </div>\n                    <div className='col'>\n                        <a\n                            role='button'\n                            className='btn btn-link'\n                            href='tel:+12065551234'>\n                            <i className='fa fa-phone' /> 1-206-555-1234\n                        </a>\n                        <br />\n                        <a\n                            role='button'\n                            className='btn btn-link'\n                            href='mailto:fakeemail@fakeemail.co'>\n                            <i className='fa fa-envelope-o' />{\" \"}\n                            campsites@nucamp.co\n                        </a>\n                    </div>\n                </div>\n                <div className='row row-content'>\n                    <div className='col-12'>\n                        <h2>Send us your Feedback</h2>\n                        <hr />\n                    </div>\n                    <div className='col-md-10'>\n                        <LocalForm\n                            onSubmit={(values) => this.handleSubmit(values)}>\n                            <Row className='form-group'>\n                                <Label htmlFor='firstName' md={2}>\n                                    First Name\n                                </Label>\n                                <Col md={10}>\n                                    <Control.text\n                                        model='.firstName'\n                                        id='firstName'\n                                        name='firstName'\n                                        placeholder='First Name'\n                                        className='form-control'\n                                        validators={{\n                                            required,\n                                            minLength: minLength(2),\n                                            maxLength: maxLength(15),\n                                        }}\n                                    />\n                                    <Errors\n                                        className='text-danger'\n                                        model='.firstName'\n                                        show='touched'\n                                        component='div'\n                                        messages={{\n                                            required: \"Required\",\n                                            minLength:\n                                                \"Must be at least 2 characters\",\n                                            maxLength:\n                                                \"Must be 15 characters or less\",\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className='form-group'>\n                                <Label htmlFor='lastName' md={2}>\n                                    Last Name\n                                </Label>\n                                <Col md={10}>\n                                    <Control.text\n                                        model='.lastName'\n                                        id='lastName'\n                                        name='lastName'\n                                        placeholder='Last Name'\n                                        className='form-control'\n                                        validators={{\n                                            required,\n                                            minLength: minLength(2),\n                                            maxLength: maxLength(15),\n                                        }}\n                                    />\n                                    <Errors\n                                        className='text-danger'\n                                        model='.lastName'\n                                        show='touched'\n                                        component='div'\n                                        messages={{\n                                            required: \"Required\",\n                                            minLength:\n                                                \"Must be at least 2 characters\",\n                                            maxLength:\n                                                \"Must be 15 characters or less\",\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className='form-group'>\n                                <Label htmlFor='phoneNum' md={2}>\n                                    Phone\n                                </Label>\n                                <Col md={10}>\n                                    <Control.text\n                                        model='.phoneNum'\n                                        id='phoneNum'\n                                        name='phoneNum'\n                                        placeholder='Phone number'\n                                        className='form-control'\n                                        validators={{\n                                            required,\n                                            minLength: minLength(10),\n                                            maxLength: maxLength(15),\n                                            isNumber,\n                                        }}\n                                    />\n                                    <Errors\n                                        className='text-danger'\n                                        model='.phoneNum'\n                                        show='touched'\n                                        component='div'\n                                        messages={{\n                                            required: \"Required\",\n                                            minLength:\n                                                \"Must be at least 10 numbers\",\n                                            maxLength:\n                                                \"Must be 15 numbers or less\",\n                                            isNumber: \"Must be a number\",\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className='form-group'>\n                                <Label htmlFor='email' md={2}>\n                                    Email\n                                </Label>\n                                <Col md={10}>\n                                    <Control.text\n                                        model='.email'\n                                        id='email'\n                                        name='email'\n                                        placeholder='Email'\n                                        className='form-control'\n                                        validators={{\n                                            required,\n                                            validEmail,\n                                        }}\n                                    />\n                                    <Errors\n                                        className='text-danger'\n                                        model='.email'\n                                        show='touched'\n                                        component='div'\n                                        messages={{\n                                            required: \"Required\",\n                                            validEmail: \"Invalid email address\",\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className='form-group'>\n                                <Col md={{ size: 4, offset: 2 }}>\n                                    <div className='form-check'>\n                                        <Label check>\n                                            <Control.checkbox\n                                                model='.agree'\n                                                name='agree'\n                                                className='form-check-input'\n                                            />{\" \"}\n                                            <strong>May we contact you?</strong>\n                                        </Label>\n                                    </div>\n                                </Col>\n                                <Col md={4}>\n                                    <Control.select\n                                        model='.contactType'\n                                        name='contactType'\n                                        className='form-control'>\n                                        <option>By Phone</option>\n                                        <option>By Email</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className='form-group'>\n                                <Label htmlFor='feedback' md={2}>\n                                    Your Feedback\n                                </Label>\n                                <Col md={10}>\n                                    <Control.textarea\n                                        model='.feedback'\n                                        id='feedback'\n                                        name='feedback'\n                                        rows='12'\n                                        className='form-control'\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className='form-group'>\n                                <Col md={{ size: 10, offset: 2 }}>\n                                    <Button type='submit' color='primary'>\n                                        Send Feedback\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </LocalForm>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Contact;\n","/Volumes/Data/travis_Bkup/Documents/NucampFolder/3-React/nucampsite/src/shared/promotions.js",[],"/Volumes/Data/travis_Bkup/Documents/NucampFolder/3-React/nucampsite/src/shared/partners.js",[],"/Volumes/Data/travis_Bkup/Documents/NucampFolder/3-React/nucampsite/src/shared/comments.js",[],"/Volumes/Data/travis_Bkup/Documents/NucampFolder/3-React/nucampsite/src/components/AboutComponent.js",[],"/Volumes/Data/travis_Bkup/Documents/NucampFolder/3-React/nucampsite/src/redux/configureStore.js",[],"/Volumes/Data/travis_Bkup/Documents/NucampFolder/3-React/nucampsite/src/redux/comments.js",[],"/Volumes/Data/travis_Bkup/Documents/NucampFolder/3-React/nucampsite/src/redux/promotions.js",[],"/Volumes/Data/travis_Bkup/Documents/NucampFolder/3-React/nucampsite/src/redux/partners.js",[],"/Volumes/Data/travis_Bkup/Documents/NucampFolder/3-React/nucampsite/src/redux/campsites.js",[],"/Volumes/Data/travis_Bkup/Documents/NucampFolder/3-React/nucampsite/src/redux/ActionTypes.js",[],"/Volumes/Data/travis_Bkup/Documents/NucampFolder/3-React/nucampsite/src/redux/ActionCreators.js",[],"/Volumes/Data/travis_Bkup/Documents/NucampFolder/3-React/nucampsite/src/components/LoadingComponent.js",[],{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":67,"column":33,"nodeType":"115","endLine":75,"endColumn":40},{"ruleId":"113","severity":1,"message":"116","line":94,"column":29,"nodeType":"115","endLine":105,"endColumn":31},{"ruleId":"113","severity":1,"message":"117","line":120,"column":29,"nodeType":"115","endLine":130,"endColumn":31},{"ruleId":"113","severity":1,"message":"116","line":105,"column":37,"nodeType":"115","endLine":116,"endColumn":39},{"ruleId":"113","severity":1,"message":"116","line":137,"column":37,"nodeType":"115","endLine":148,"endColumn":39},{"ruleId":"113","severity":1,"message":"116","line":169,"column":37,"nodeType":"115","endLine":181,"endColumn":39},{"ruleId":"113","severity":1,"message":"116","line":203,"column":37,"nodeType":"115","endLine":213,"endColumn":39},{"ruleId":"113","severity":1,"message":"118","line":230,"column":45,"nodeType":"115","endLine":234,"endColumn":47},{"ruleId":"113","severity":1,"message":"114","line":240,"column":37,"nodeType":"115","endLine":243,"endColumn":66},{"ruleId":"113","severity":1,"message":"117","line":254,"column":37,"nodeType":"115","endLine":260,"endColumn":39},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE","no-global-assign","no-unsafe-negation"]